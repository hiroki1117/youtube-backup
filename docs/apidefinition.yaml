swagger: '2.0'
x-stoplight:
  id: d6o40f00aca2a
schemes:
  - https
definitions:
  Empty:
    type: object
    title: Empty Schema
info:
  title: youtubebackupapi
  version: '1'
  description: youtube backup
produces:
  - application/json
paths:
  /video:
    get:
      summary: ''
      operationId: get-video
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/Empty'
      description: 動画情報一覧を取得
      parameters:
        - type: string
          in: query
          name: upload_status
          description: 取得する動画の状態をバックアップ済み(complete)、バックアップ中(initi)かで指定する(デフォルトcomplete)
        - type: integer
          in: query
          name: fetch_num
          description: 取得する動画件数(デフォルト30件)
      x-amazon-apigateway-integration:
        type: aws_proxy
        httpMethod: POST
        uri: '${video-list-lambda_arn}'
        responses:
          default:
            statusCode: '200'
        passthroughBehavior: when_no_match
        contentHandling: CONVERT_TO_TEXT
    post:
      summary: ''
      operationId: post-video
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/Empty'
          examples:
            succ:
              result: succ
              description: バックアップ処理開始
              video_data:
                video_id: SkNtkQGP7zQ
                title: 七つの海を渡る風のように 中文字幕
                already_backup: false
                batch_job_id: 5afeb001-27e0-49ea-be53-f19c0b1cbd95
                s3: 's3://youtubedl-bucket/youtube/2022/2/7/SkNtkQGP7zQ.mp4'
            Alrady Backuped:
              result: succ
              description: バックアップ済み
              video_data:
                video_id: SkNtkQGP7zQ
                title: 七つの海を渡る風のように 中文字幕
                already_backup: true
                batch_job_id: ''
                s3: 's3://youtubedl-bucket/youtube/2022/2/7/SkNtkQGP7zQ.mp4'
      parameters:
        - in: body
          name: body
          schema:
            type: object
            properties:
              url:
                type: string
      description: 動画をバックアップする
      x-amazon-apigateway-integration:
        type: aws_proxy
        httpMethod: POST
        uri: '${submit-job-lambda_arn}'
        responses:
          default:
            statusCode: '200'
        passthroughBehavior: when_no_match
        contentHandling: CONVERT_TO_TEXT
    parameters: []
  '/video/{video_id}':
    get:
      summary: ''
      operationId: get-video-data
      description: ある動画情報を取得
      responses:
        '200':
          description: 200 response
          schema:
            $ref: '#/definitions/Empty'
          examples:
            succ:
              result: succ
              description: ''
              video_data:
                request_timestamp: '1644210444'
                s3fullpath: 's3://youtubedl-bucket/youtube/2022/2/7/don_p8iPYoQ.mp4'
                upload_status: complete
                platform: youtube
                video_id: don_p8iPYoQ
                video_url: 'https://www.youtube.com/watch?v=don_p8iPYoQ'
                backupdate: '2022-02-07'
                title: ANiMA(Full Version)
            NotFound:
              result: error
              description: Dynamoに情報がない
              video_data: null
      x-amazon-apigateway-integration:
        type: aws_proxy
        httpMethod: POST
        uri: '${video-info-lambda_arn}'
        responses:
          default:
            statusCode: '200'
        passthroughBehavior: when_no_match
        contentHandling: CONVERT_TO_TEXT
    delete:
      summary: ''
      operationId: delete-video
      description: 動画データを削除
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/Empty'
          examples:
            succ:
              result: succ
              description: ''
              video_data:
                request_timestamp: '1644210444'
                s3fullpath: 's3://youtubedl-bucket/youtube/2022/2/7/don_p8iPYoQ.mp4'
                upload_status: complete
                platform: youtube
                video_id: don_p8iPYoQ
                video_url: 'https://www.youtube.com/watch?v=don_p8iPYoQ'
                backupdate: '2022-02-07'
                title: ANiMA(Full Version)
            error:
              result: error
              description: (バックアップ中)Dynamoに登録されているがS3に存在しません。
              video_data:
                request_timestamp: '1644212024'
                s3fullpath: 's3://youtubedl-bucket/youtube/2022/2/7/SkNtkQGP7zQ.mp4'
                upload_status: init
                platform: youtube
                video_id: SkNtkQGP7zQ
                video_url: 'https://www.youtube.com/watch?v=SkNtkQGP7zQ'
                backupdate: '2022-02-07'
                title: 七つの海を渡る風のように 中文字幕
      x-amazon-apigateway-integration:
        type: aws_proxy
        httpMethod: POST
        uri: '${delete-video-lambda_arn}'
        responses:
          default:
            statusCode: '200'
        passthroughBehavior: when_no_match
        contentHandling: CONVERT_TO_TEXT
    patch:
      summary: ''
      operationId: patch-video
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/Empty'
          examples:
            succ:
              result: succ
            NotFound:
              result: error
      description: 動画情報を更新する
      parameters:
        - in: body
          name: body
          schema:
            type: object
            properties:
              title:
                type: string
          description: ''
      x-amazon-apigateway-integration:
        type: aws_proxy
        httpMethod: POST
        uri: '${update-video-lambda_arn}'
        responses:
          default:
            statusCode: '200'
        passthroughBehavior: when_no_match
        contentHandling: CONVERT_TO_TEXT
  /presigned-s3url:
    get:
      produces:
        - application/json
      responses:
        '200':
          description: 200 response
          schema:
            $ref: '#/definitions/Empty'
          examples: {}
      x-amazon-apigateway-integration:
        type: aws_proxy
        httpMethod: POST
        uri: '${presigned-s3url-lambda_arn}'
        responses:
          default:
            statusCode: '200'
        passthroughBehavior: when_no_match
        contentHandling: CONVERT_TO_TEXT
      description: S3に保管されている動画のpresigned urlを取得する
      parameters:
        - type: string
          in: query
          name: video_id
          description: 動画id
          required: true
